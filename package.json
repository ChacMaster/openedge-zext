{
    "name": "openedge-zext",
    "displayName": "OpenEdge ABL (Progress 4GL)",
    "description": "OpenEdge ABL Extension for VSCode",
    "version": "0.0.22",
    "publisher": "ezequielgandolfi",
    "author": "Ezequiel Gandolfi",
    "license": "Apache-2.0",
    "engines": {
        "vscode": "^1.29.0"
    },
    "icon": "resources/icons/openedge.jpg",
    "repository": {
        "type": "git",
        "url": "https://github.com/ezequielgandolfi/openedge-zext.git"
    },
    "bugs": {
        "url": "https://github.com/ezequielgandolfi/openedge-zext/issues"
    },
    "categories": [
        "Programming Languages",
        "Snippets",
        "Formatters"
    ],
    "activationEvents": [
        "onLanguage:abl",
        "onView:abl.outline"
    ],
    "main": "./out/extension",
    "contributes": {
        "languages": [
            {
                "id": "abl",
                "aliases": [
                    "OpenEdge ABL",
                    "abl",
                    "Progress",
                    "Progress 4GL"
                ],
                "extensions": [
                    ".w",
                    ".p",
                    ".i",
                    ".cls"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "abl",
                "scopeName": "source.abl",
                "path": "./grammar/abl.tmLanguage.json"
            }
        ],
        "snippets": [
            {
                "language": "abl",
                "path": "./snippets/abl.json"
            }
        ],
        "commands": [
            {
                "command": "abl.run.currentFile",
                "title": "ABL: Run",
                "description": "Run the current file"
            },
            {
                "command": "abl.checkSyntax",
                "title": "ABL: CheckSyntax",
                "description": "Check the syntax for the current file"
            },
            {
                "command": "abl.compile",
                "title": "ABL: Compile & Deploy",
                "description": "Compile the current file and deploy the R-Code"
            },
            {
                "command": "abl.deploy.currentFile",
                "title": "ABL: Deploy Source",
                "description": "Deploy the current file to remote host"
            },
            {
                "command": "abl.dictionary.read",
                "title": "ABL: Read Dictionary Structure",
                "description": "Read the DataDictionary structure for further use"
            },
            {
                "command": "abl.ask.currentFile",
                "title": "ABL: Compile with Options",
                "description": "Compile the current file with some options"
            }
        ],
        "breakpoints": [
            {
                "language": "abl"
            }
        ],
        "configuration": [
            {
                "type": "object",
                "title": "ABL configuration",
                "properties": {
                    "abl.outline.doSort": {
                        "type": "boolean",
                        "default": true,
                        "description": "Sort the outline view"
                    },
                    "abl.outline.expandNodes": {
                        "type": "array",
                        "default": [
                            "Module",
                            "Class",
                            "Interface",
                            "Namespace",
                            "Object",
                            "Package",
                            "Struct"
                        ],
                        "description": "Kinds of nodes to be expanded automatically."
                    },
                    "abl.outline.sortOrder": {
                        "type": "array",
                        "default": [
                            "Class",
                            "Module",
                            "Constant",
                            "Interface",
                            "*",
                            "Constructor",
                            "Function",
                            "Method"
                        ],
                        "description": "Order to the sort symbols in, if sorted.  * is placeholder for all symbols not explicitly listed."
                    },
                    "abl.outline.topLevel": {
                        "type": "array",
                        "default": [
                            "*"
                        ],
                        "description": "Which symbols to include at the topmost scope.  * includes everything."
                    },
                    "abl.files.encoding": {
                        "type": "string",
                        "default": "iso88591"
                    },
                    "abl.checkSyntaxOnSave": {
                        "type": "string",
                        "enum": [
                            "file",
                            "workspace",
                            "off"
                        ],
                        "default": "off",
                        "description": "On save, check the syntax fot eh current file, the workspace, or nothing at all."
                    },
                    "abl.editorContextMenuCommands": {
                        "type": "object",
                        "properties": {
                            "checkSyntax": {
                                "type": "boolean",
                                "default": true,
                                "description": "If true, adds command to check syntax to the editor context menu"
                            }
                        }
                    }
                }
            },
            {
                "type": "object",
                "title": "ABL formatter",
                "properties": {
                    "ablFormat.newLine": {
                        "type": "object",
                        "default": {
                            "brace": false
                        },
                        "description": "Whether or not to put items on a new line or the same line."
                    },
                    "ablFormat.onType": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enables or disables formatting while typing."
                    },
                    "ablFormat.space": {
                        "type": "object",
                        "description": "The number of spaces to place before/after particular character.",
                        "default": {
                            "language": {
                                "php": {
                                    ".": {
                                        "before": 1,
                                        "after": 1
                                    }
                                },
                                "javascript": {
                                    "+": {
                                        "before": 1,
                                        "after": 1
                                    }
                                },
                                "java": {
                                    "+": {
                                        "before": 1,
                                        "after": 1
                                    }
                                },
                                "css": {
                                    ":": {
                                        "before": 0,
                                        "after": 1
                                    },
                                    "=": {
                                        "before": 0,
                                        "after": 0
                                    }
                                }
                            },
                            "and": {
                                "before": 1,
                                "after": 1
                            },
                            "or": {
                                "before": 1,
                                "after": 1
                            },
                            "equal": {
                                "before": 1,
                                "after": 1
                            },
                            "not": {
                                "before": 1,
                                "after": 1
                            },
                            "greaterThan": {
                                "before": 1,
                                "after": 1
                            },
                            "lessThan": {
                                "before": 1,
                                "after": 1
                            },
                            "comma": {
                                "before": 0,
                                "after": 1
                            },
                            "question": {
                                "before": 1,
                                "after": 1
                            },
                            "colon": {
                                "before": 1,
                                "after": 1
                            },
                            "semicolon": {
                                "before": 0,
                                "after": 1
                            },
                            "increment": {
                                "before": 0,
                                "after": 0
                            },
                            "decrement": {
                                "before": 0,
                                "after": 0
                            },
                            "add": {
                                "before": 1,
                                "after": 1
                            },
                            "subtract": {
                                "before": 1,
                                "after": 1
                            },
                            "multiply": {
                                "before": 1,
                                "after": 1
                            },
                            "divide": {
                                "before": 1,
                                "after": 1
                            },
                            "modulo": {
                                "before": 1,
                                "after": 1
                            },
                            "parenthesis": {
                                "open": {
                                    "before": {
                                        "other": 1,
                                        "foreach": 1,
                                        "for": 1,
                                        "while": 1,
                                        "if": 1,
                                        "elseif": 1,
                                        "elif": 1,
                                        "switch": 1,
                                        "do": 1,
                                        "function": 1
                                    },
                                    "after": {
                                        "other": 1,
                                        "foreach": 0,
                                        "for": 0,
                                        "while": 0,
                                        "if": 0,
                                        "elseif": 0,
                                        "elif": 0,
                                        "switch": 0,
                                        "do": 0,
                                        "function": 0
                                    }
                                },
                                "close": {
                                    "before": {
                                        "other": 1,
                                        "foreach": 0,
                                        "for": 0,
                                        "while": 0,
                                        "if": 0,
                                        "elseif": 0,
                                        "elif": 0,
                                        "switch": 0,
                                        "do": 0,
                                        "function": 0
                                    }
                                }
                            },
                            "brace": {
                                "open": {
                                    "before": {
                                        "other": 1,
                                        "foreach": 1,
                                        "for": 1,
                                        "while": 1,
                                        "if": 1,
                                        "elseif": 1,
                                        "elif": 1,
                                        "switch": 1,
                                        "do": 1,
                                        "function": 1
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ],
        "jsonValidation": [
            {
                "fileMatch": ".openedge-zext.json",
                "url": "./schemas/openedge-zext.schema.json"
            }
        ],
        "keybindings": [
            {
                "when": "editorTextFocus && editorLangId == 'abl'",
                "command": "abl.checkSyntax",
                "key": "Shift+F2"
            },
            {
                "when": "editorTextFocus && editorLangId == 'abl'",
                "command": "abl.run.currentFile",
                "key": "F2"
            },
            {
                "when": "editorTextFocus && editorLangId == 'abl'",
                "command": "abl.compile",
                "key": "Alt+F1"
            },
            {
                "when": "editorTextFocus && editorLangId == 'abl'",
                "command": "abl.deploy.currentFile",
                "key": "Alt+F2"
            },
            {
                "when": "editorTextFocus && editorLangId == 'abl'",
                "command": "abl.ask.currentFile",
                "key": "Alt+F3"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test",
        "build": "vsce package"
    },
    "dependencies": {
        "glob": "^7.1.2",
        "jsonminify": "^0.4.1",
        "minimatch": "^3.0.4",
        "rimraf": "^2.6.2",
        "util.promisify": "^1.0.0",
        "xml2js": "^0.4.19"
    },
    "devDependencies": {
        "typescript": "^3.1.4",
        "vscode": "^1.1.25",
        "vsce": "^1.47.0",
        "tslint": "^5.8.0",
        "@types/node": "^8.10.25",
        "@types/mocha": "^2.2.42"
    }
}
